// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//yarn prisma migrate dev

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  lastname String
  email String @unique
  password String
  idAdmin Boolean @default(false)
  
  planning Planning?
  contacts Contact[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
  
}

model Contact{
  id String @id @default(uuid())
  name String
  lastname String
  email String @unique
  phoneNumber String

  user User @relation(fields: [userId], references: [id])
  userId String

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("contacts")
}

model Planning {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String

  events Event[]
  goals Goal[]
  habits Habit[]
  tasks Task[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("plannings")
}

model HabitList{
  id Int @id @default(autoincrement())
  title String
  motivation String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String

@@map("habitsList")
}

model Category{
  id String @id @default(uuid())
  title String

  events Event[]
  goals Goal[]
  habits Habit[]
  tasks Task[]
  habitsList HabitList[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("categorys")
}


model Event {
  id String @id @default(uuid())
  title String
  description String
  date String
  time String
  extendedLocalization Json?
  repeat Json?

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
  planning Planning @relation(fields: [planningId], references: [id])
  planningId String

  @@map("events")
  }

model Goal{
  id String @id @default(uuid())
  title String
  description String
  startDate DateTime @db.Date
  endDate DateTime @db.Date

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
  planning Planning @relation(fields: [planningId], references: [id])
  planningId String

  @@map("goals")
}

model Habit{
  id String @id @default(uuid())
  title String
  motivation String
  frequency Json? 

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
  planning Planning @relation(fields: [planningId], references: [id])
  planningId String

  @@map("habits")
}

model Task{
  id String @id @default(uuid())
  title String
  description String
  date DateTime @db.Date

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
  planning Planning @relation(fields: [planningId], references: [id])
  planningId String

  @@map("tasks")
}